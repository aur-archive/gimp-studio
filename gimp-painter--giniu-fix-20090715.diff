--- gimp-painter--20090715.diff	2010-03-28 14:37:11.000000000 +0200
+++ gimp-painter--20090715-fixed.diff	2010-04-02 23:57:53.000000000 +0200
@@ -50,8 +50,8 @@
 +  guint        n_param_specs;
 +  gint         i;
 +
-+  g_return_val_if_fail (G_IS_OBJECT (src), FALSE);
-+  g_return_val_if_fail (G_IS_OBJECT (dest), FALSE);
++  g_return_if_fail (G_IS_OBJECT (src));
++  g_return_if_fail (G_IS_OBJECT (dest));
 +
 +  param_specs = g_object_class_list_properties (G_OBJECT_GET_CLASS (src),
 +                                                &n_param_specs);
@@ -77,85 +77,6 @@
 +
 +  return;
 + }
---- gimp-2.6.6/app/config/gimpguiconfig.c	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/config/gimpguiconfig.c	2009-06-16 02:25:02 +0900
-@@ -84,6 +84,8 @@
-   PROP_DOCK_WINDOW_HINT,
-   PROP_TRANSIENT_DOCKS,
-   PROP_CURSOR_FORMAT,
-+  PROP_SYSTEM_COORDS_STYLUS,
-+  PROP_SYSTEM_COORDS_PUCK,
- 
-   /* ignored, only for backward compatibility: */
-   PROP_INFO_WINDOW_PER_DISPLAY,
-@@ -273,6 +275,16 @@
-                                  GIMP_TYPE_CURSOR_FORMAT,
-                                  GIMP_CURSOR_FORMAT_PIXBUF,
-                                  GIMP_PARAM_STATIC_STRINGS);
-+  GIMP_CONFIG_INSTALL_PROP_BOOLEAN (object_class, PROP_SYSTEM_COORDS_STYLUS,
-+                                    "system-coords-stylus",
-+                                    SYSTEM_COORDS_STYLUS_BLURB,
-+                                    FALSE,
-+                                    GIMP_PARAM_STATIC_STRINGS);
-+  GIMP_CONFIG_INSTALL_PROP_BOOLEAN (object_class, PROP_SYSTEM_COORDS_PUCK,
-+                                    "system-coords-puck",
-+                                    SYSTEM_COORDS_PUCK_BLURB,
-+                                    FALSE,
-+                                    GIMP_PARAM_STATIC_STRINGS);
- 
-   /*  only for backward compatibility:  */
-   GIMP_CONFIG_INSTALL_PROP_BOOLEAN (object_class, PROP_INFO_WINDOW_PER_DISPLAY,
-@@ -423,6 +435,12 @@
-     case PROP_CURSOR_FORMAT:
-       gui_config->cursor_format = g_value_get_enum (value);
-       break;
-+    case PROP_SYSTEM_COORDS_STYLUS:
-+      gui_config->system_coords_stylus = g_value_get_boolean (value);
-+      break;
-+    case PROP_SYSTEM_COORDS_PUCK:
-+      gui_config->system_coords_puck = g_value_get_boolean (value);
-+      break;
- 
-     case PROP_INFO_WINDOW_PER_DISPLAY:
-     case PROP_SHOW_TOOL_TIPS:
-@@ -542,6 +560,12 @@
-     case PROP_CURSOR_FORMAT:
-       g_value_set_enum (value, gui_config->cursor_format);
-       break;
-+    case PROP_SYSTEM_COORDS_STYLUS:
-+      g_value_set_boolean (value, gui_config->system_coords_stylus);
-+      break;
-+    case PROP_SYSTEM_COORDS_PUCK:
-+      g_value_set_boolean (value, gui_config->system_coords_puck);
-+      break;
- 
-     case PROP_INFO_WINDOW_PER_DISPLAY:
-     case PROP_SHOW_TOOL_TIPS:
---- gimp-2.6.6/app/config/gimpguiconfig.h	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/config/gimpguiconfig.h	2009-06-16 02:34:32 +0900
-@@ -72,6 +72,8 @@
-   GimpWindowHint       dock_window_hint;
-   gboolean             transient_docks;
-   GimpCursorFormat     cursor_format;
-+  gboolean             system_coords_stylus;
-+  gboolean             system_coords_puck;
- 
-   gint                 last_tip;  /* saved in sessionrc */
- };
---- gimp-2.6.6/app/config/gimprc-blurbs.h	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/config/gimprc-blurbs.h	2009-06-16 02:32:26 +0900
-@@ -450,5 +450,11 @@
- #define ZOOM_QUALITY_BLURB \
- "There's a tradeoff between speed and quality of the zoomed-out display."
- 
-+#define SYSTEM_COORDS_STYLUS_BLURB \
-+"Try to turn on when the cursor position is not correctly with stylus pen."
-+
-+#define SYSTEM_COORDS_PUCK_BLURB \
-+"Try to turn on when the cursor position is not correctly with tablet mouse."
-+
- 
- #endif  /* __GIMP_RC_BLURBS_H__ */
 --- gimp-2.6.6/app/core/core-enums.h	2008-11-21 07:42:58 +0900
 +++ gimp-painter--2.6.6/app/core/core-enums.h	2009-03-17 10:42:37 +0900
 @@ -603,15 +603,16 @@
@@ -504,17 +425,6 @@
  /*  paint mode  */
  GimpLayerModeEffects
                  gimp_context_get_paint_mode     (GimpContext     *context);
---- gimp-2.6.6/app/core/gimpprojection.c	2008-11-21 07:42:58 +0900
-+++ gimp-painter--2.6.6/app/core/gimpprojection.c	2009-03-17 10:42:37 +0900
-@@ -36,7 +36,7 @@
- 
- 
- /*  halfway between G_PRIORITY_HIGH_IDLE and G_PRIORITY_DEFAULT_IDLE  */
--#define  GIMP_PROJECTION_IDLE_PRIORITY  150
-+#define  GIMP_PROJECTION_IDLE_PRIORITY  G_PRIORITY_HIGH_IDLE
- 
- 
- enum
 --- gimp-2.6.6/app/core/gimptooloptions.c	2008-11-21 07:42:58 +0900
 +++ gimp-painter--2.6.6/app/core/gimptooloptions.c	2009-03-17 10:42:37 +0900
 @@ -45,7 +45,8 @@
@@ -624,31 +534,7 @@
  
    /**********************/
    /*  Color Management  */
-@@ -2589,6 +2602,23 @@
- 
-   g_object_set_data (G_OBJECT (button), "clear-button", button2);
- 
-+  /* Device coords  */
-+  vbox2 = prefs_frame_new (_("Use System Coords"),
-+                           GTK_CONTAINER (vbox), FALSE);
-+
-+  button = prefs_check_button_add (object, "system-coords-stylus",
-+                                   _("_Stylus and Eraser"),
-+                                   GTK_BOX (vbox2));
-+
-+  button2 = prefs_check_button_add (object, "system-coords-puck",
-+                                    _("_Mouse and Lens Cursor"),
-+                                    GTK_BOX (vbox2));
-+
-+#ifndef G_OS_WIN32
-+  gtk_widget_set_sensitive (button, FALSE);
-+  gtk_widget_set_sensitive (button2, FALSE);
-+#endif
-+
- 
-   /****************************/
-   /*  Additional Controllers  */
-@@ -2636,7 +2666,7 @@
+@@ -2636,7 +2649,7 @@
                              _("Hint for other _docks:"),
                              GTK_TABLE (table), 1, size_group);
  
@@ -657,45 +543,9 @@
    prefs_check_button_add (object, "transient-docks",
                            _("Toolbox and other docks are transient "
                              "to the active image window"),
---- gimp-2.6.6/app/display/gimpdisplay.c	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/display/gimpdisplay.c	2009-06-16 04:59:10 +0900
-@@ -26,6 +26,7 @@
- #include "tools/tools-types.h"
- 
- #include "config/gimpdisplayconfig.h"
-+#include "config/gimpguiconfig.h"
- 
- #include "core/gimp.h"
- #include "core/gimparea.h"
-@@ -187,6 +188,7 @@
-     case PROP_GIMP:
-       display->gimp = g_value_get_object (value); /* don't ref the gimp */
-       display->config = GIMP_DISPLAY_CONFIG (display->gimp->config);
-+      display->gui_config = GIMP_GUI_CONFIG (display->gimp->config);
-       break;
- 
-     case PROP_IMAGE:
---- gimp-2.6.6/app/display/gimpdisplay.h	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/display/gimpdisplay.h	2009-06-16 04:52:32 +0900
-@@ -41,6 +41,7 @@
- 
-   Gimp              *gimp;         /*  global gimp instance                */
-   GimpDisplayConfig *config;
-+  GimpGuiConfig     *gui_config;
- 
-   GimpImage         *image;        /*  pointer to the associated image     */
-   gint               instance;     /*  the instance # of this display as   */
 --- gimp-2.6.6/app/display/gimpdisplayshell-callbacks.c	2008-11-21 07:43:04 +0900
 +++ gimp-painter--2.6.6/app/display/gimpdisplayshell-callbacks.c	2009-06-25 03:35:00 +0900
-@@ -32,6 +32,7 @@
- #include "tools/tools-types.h"
- 
- #include "config/gimpdisplayconfig.h"
-+#include "config/gimpguiconfig.h"
- 
- #include "core/gimp.h"
- #include "core/gimpcontext.h"
-@@ -41,6 +42,7 @@
+@@ -41,6 +41,7 @@
  #include "core/gimpimage-quick-mask.h"
  #include "core/gimplayer.h"
  #include "core/gimptoolinfo.h"
@@ -703,7 +553,7 @@
  
  #include "tools/gimpimagemaptool.h"
  #include "tools/gimpmovetool.h"
-@@ -1201,6 +1203,11 @@
+@@ -1208,6 +1209,11 @@
                {
                  GdkTimeCoord **history_events;
                  gint           n_history_events;
@@ -715,7 +565,7 @@
  
                  /*  if the first mouse button is down, check for automatic
                   *  scrolling...
-@@ -1262,7 +1269,7 @@
+@@ -1269,7 +1275,7 @@
                           */
                          if (gimp_display_shell_eval_event (shell,
                                                             &image_coords,
@@ -724,7 +574,7 @@
                                                             history_events[i]->time))
                            {
                              tool_manager_motion_active (gimp,
-@@ -1283,7 +1290,7 @@
+@@ -1290,7 +1296,7 @@
                       */
                      if (gimp_display_shell_eval_event (shell,
                                                         &image_coords,
@@ -733,152 +583,6 @@
                                                         time))
                        {
                          tool_manager_motion_active (gimp,
-@@ -1745,6 +1752,30 @@
- }
- 
- 
-+gboolean
-+gimp_display_shell_motion_notify (GimpDisplayShell *shell,
-+                                  GdkEventMotion   *event)
-+{
-+  GimpGuiConfig *gui_config = shell->display->gui_config;
-+  GdkDevice *device = event->device;
-+
-+  if ((gui_config->system_coords_stylus &&
-+       (device->source == GDK_SOURCE_PEN || device->source == GDK_SOURCE_ERASER))||
-+      (gui_config->system_coords_puck && device->source == GDK_SOURCE_CURSOR))
-+    {
-+      GdkDevice *core_pointer = gdk_device_get_core_pointer ();
-+      gdouble axes[GDK_AXIS_LAST];
-+
-+      gdk_device_get_state (core_pointer, shell->canvas->window, axes, NULL);
-+
-+      gdk_device_get_axis (core_pointer, axes, GDK_AXIS_X, &event->x);
-+      gdk_device_get_axis (core_pointer, axes, GDK_AXIS_Y, &event->y);
-+    }
-+
-+  return FALSE;
-+}
-+
-+
- /*  private functions  */
- 
- static void
---- gimp-2.6.6/app/display/gimpdisplayshell-callbacks.h	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/display/gimpdisplayshell-callbacks.h	2009-06-24 16:51:00 +0900
-@@ -57,5 +57,8 @@
-                                                        GdkEventButton   *bevent,
-                                                        GimpDisplayShell *shell);
- 
-+gboolean   gimp_display_shell_motion_notify           (GimpDisplayShell *shell,
-+                                                       GdkEventMotion   *event);
-+
- 
- #endif /* __GIMP_DISPLAY_SHELL_CALLBACKS_H__ */
---- gimp-2.6.6/app/display/gimpdisplayshell-coords.c	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/display/gimpdisplayshell-coords.c	2009-06-25 03:20:02 +0900
-@@ -24,6 +24,9 @@
- 
- #include "display-types.h"
- 
-+#include "config/gimpguiconfig.h"
-+
-+#include "gimpdisplay.h"
- #include "gimpdisplayshell.h"
- #include "gimpdisplayshell-coords.h"
- 
-@@ -40,7 +43,29 @@
- {
-   if (gdk_event_get_axis (event, GDK_AXIS_X, &coords->x))
-     {
-+#ifdef G_OS_WIN32
-+      GimpGuiConfig *gui_config = shell->display->gui_config;
-+
-+      if ((gui_config->system_coords_stylus &&
-+           (device->source == GDK_SOURCE_PEN || device->source == GDK_SOURCE_ERASER))||
-+          (gui_config->system_coords_puck && device->source == GDK_SOURCE_CURSOR))
-+        {
-+          GdkDevice *core_pointer = gdk_device_get_core_pointer ();
-+          gdouble axes[GDK_AXIS_LAST];
-+
-+          gdk_device_get_state (core_pointer, shell->canvas->window, axes, NULL);
-+
-+          gdk_device_get_axis (core_pointer, axes, GDK_AXIS_X, &coords->x);
-+          gdk_device_get_axis (core_pointer, axes, GDK_AXIS_Y, &coords->y);
-+
-+          event->motion.x = coords->x;
-+          event->motion.y = coords->y;
-+        }
-+      else
-+        gdk_event_get_axis (event, GDK_AXIS_Y, &coords->y);
-+#else
-       gdk_event_get_axis (event, GDK_AXIS_Y, &coords->y);
-+#endif
- 
-       /*  CLAMP() the return value of each *_get_axis() call to be safe
-        *  against buggy XInput drivers. Provide default values if the
-@@ -86,8 +111,22 @@
- {
-   gdouble axes[GDK_AXIS_LAST];
- 
-+#ifdef G_OS_WIN32
-+  GimpGuiConfig *gui_config = shell->display->gui_config;
-+#endif
-+
-   gdk_device_get_state (device, shell->canvas->window, axes, NULL);
- 
-+#ifdef G_OS_WIN32
-+  if ((gui_config->system_coords_stylus &&
-+       (device->source == GDK_SOURCE_PEN || device->source == GDK_SOURCE_ERASER)) ||
-+      (gui_config->system_coords_puck && device->source == GDK_SOURCE_CURSOR))
-+    {
-+      gdk_device_get_state (gdk_device_get_core_pointer (),
-+                            shell->canvas->window, axes, NULL);
-+    }
-+#endif
-+
-   gdk_device_get_axis (device, axes, GDK_AXIS_X, &coords->x);
-   gdk_device_get_axis (device, axes, GDK_AXIS_Y, &coords->y);
- 
---- gimp-2.6.6/app/display/gimpdisplayshell.c	2009-03-18 01:51:59 +0900
-+++ gimp-painter--2.6.6/app/display/gimpdisplayshell.c	2009-06-25 18:03:38 +0900
-@@ -1044,11 +1044,24 @@
-   gimp_display_shell_dnd_init (shell);
-   gimp_display_shell_selection_init (shell);
- 
-+#ifdef G_OS_WIN32
-+  /*  Modify the x-y coords of motion event before invoking rulers'
-+      default handler  */
-+  g_signal_connect_swapped (shell->canvas, "motion-notify-event",
-+                            G_CALLBACK (gimp_display_shell_motion_notify),
-+                            shell);
-+#endif
-+
-   /*  the horizontal ruler  */
-   shell->hrule = gimp_ruler_new (GTK_ORIENTATION_HORIZONTAL);
-   gtk_widget_set_events (GTK_WIDGET (shell->hrule),
-                          GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK);
- 
-+#ifdef G_OS_WIN32
-+  g_signal_connect_swapped (shell->hrule, "motion-notify-event",
-+                            G_CALLBACK (gimp_display_shell_motion_notify),
-+                            shell);
-+#endif
-   g_signal_connect_swapped (shell->canvas, "motion-notify-event",
-                             G_CALLBACK (GTK_WIDGET_GET_CLASS (shell->hrule)->motion_notify_event),
-                             shell->hrule);
-@@ -1063,6 +1076,11 @@
-   gtk_widget_set_events (GTK_WIDGET (shell->vrule),
-                          GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK);
- 
-+#ifdef G_OS_WIN32
-+  g_signal_connect_swapped (shell->vrule, "motion-notify-event",
-+                            G_CALLBACK (gimp_display_shell_motion_notify),
-+                            shell);
-+#endif
-   g_signal_connect_swapped (shell->canvas, "motion-notify-event",
-                             G_CALLBACK (GTK_WIDGET_GET_CLASS (shell->vrule)->motion_notify_event),
-                             shell->vrule);
 --- gimp-2.6.6/app/paint/Makefile.am	2008-11-21 07:43:08 +0900
 +++ gimp-painter--2.6.6/app/paint/Makefile.am	2009-03-17 10:42:37 +0900
 @@ -76,7 +76,17 @@
@@ -902,7 +606,7 @@
  
 --- gimp-2.6.6/app/paint/Makefile.in	2009-03-16 05:58:04 +0900
 +++ gimp-painter--2.6.6/app/paint/Makefile.in	2009-03-17 10:42:37 +0900
-@@ -66,7 +66,9 @@
+@@ -69,7 +69,9 @@
  	gimppaintbrush.$(OBJEXT) gimpperspectiveclone.$(OBJEXT) \
  	gimpperspectivecloneoptions.$(OBJEXT) gimpsmudge.$(OBJEXT) \
  	gimpsmudgeoptions.$(OBJEXT) gimpsourcecore.$(OBJEXT) \
@@ -913,7 +617,7 @@
  am_libapppaint_a_OBJECTS = $(am__objects_1) $(am__objects_2)
  libapppaint_a_OBJECTS = $(am_libapppaint_a_OBJECTS)
  DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
-@@ -475,7 +477,17 @@
+@@ -461,7 +463,17 @@
  	gimpsourcecore.c		\
  	gimpsourcecore.h		\
  	gimpsourceoptions.c		\
@@ -932,7 +636,7 @@
  
  libapppaint_a_built_sources = paint-enums.c
  libapppaint_a_SOURCES = $(libapppaint_a_built_sources) $(libapppaint_a_sources)
-@@ -565,6 +577,11 @@
+@@ -552,6 +564,11 @@
  @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gimpsourcecore.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gimpsourceoptions.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/paint-enums.Po@am__quote@
@@ -1102,7 +806,7 @@
  }
 --- gimp-2.6.6/app/paint/gimpheal.c	2008-11-21 07:43:08 +0900
 +++ gimp-painter--2.6.6/app/paint/gimpheal.c	2009-03-17 10:42:37 +0900
-@@ -555,5 +555,6 @@
+@@ -556,5 +556,6 @@
                                    gimp_context_get_opacity (context),
                                    gimp_paint_options_get_brush_mode (paint_options),
                                    hardness,
@@ -1443,7 +1147,7 @@
 +      guint32    lasttime = ink->last_time;
 +      guint32    thistime;
 +      GimpCoords average_hist;
-+      GimpCoords average_velocity;
++      /* GimpCoords average_velocity; */
 +
 +      time_smoother_add (ink, time);
 +      thistime = ink->last_time = time_smoother_result (ink);
@@ -1801,8 +1505,8 @@
 +{
 +  gint i;
 +  GimpCoords result;
-+  result.x = result.y = 0.0;
-+  gdouble scale_sum = 0.0;
++  gdouble scale_sum;
++  scale_sum = result.x = result.y = 0.0;
 +
 +  if (ink->hist_count > 0) {
 +    gint max_hist_count = MIN(ink->hist_count, options->compensation_hist_size);
@@ -2676,10 +2380,10 @@
 +#include "core/gimpimage.h"
 +#include "core/gimppickable.h"
 +#include "core/gimpprojection.h"
++#include "core/gimpchannel.h"
 +
 +#include "gimpmixbrush.h"
 +#include "gimpmixbrushoptions.h"
-+
 +#ifdef GIMP_MIXBRUSH_COMPOSITE
 +#include "gimpmixbrush-composite.h"
 +#endif
@@ -3056,7 +2760,7 @@
 +                               color_uchar[3]);
 +
 +          mixbrush->hidden_color.a = 1.0;
-+          break;
++        default: break;
 +        }
 +    }
 +
@@ -3133,7 +2837,7 @@
 +{
 +  GimpBrushCore            *brush_core       = GIMP_BRUSH_CORE (paint_core);
 +  GimpContext              *context          = GIMP_CONTEXT (paint_options);
-+  GimpDynamicOptions       *pressure_options = paint_options->pressure_options;
++  /* GimpDynamicOptions       *pressure_options = paint_options->pressure_options; */
 +  GimpImage                *image;
 +  TempBuf                  *area;
 +  GimpMixbrush             *mixbrush         = GIMP_MIXBRUSH (paint_core);
@@ -5289,7 +4993,7 @@
                      area->bytes);
  
 -      paint_appl_mode = GIMP_PAINT_INCREMENTAL;
-+      /*paint_appl_mode = GIMP_PAINT_INCREMENTAL;*/
++      paint_appl_mode = GIMP_PAINT_INCREMENTAL; // reverted, TODO - check mixbrush
      }
    /* otherwise check if the brush has a pixmap and use that to color the area */
    else if (brush_core->brush && brush_core->brush->pixmap)
@@ -5298,7 +5002,7 @@
                                                gimp_paint_options_get_brush_mode (paint_options));
  
 -      paint_appl_mode = GIMP_PAINT_INCREMENTAL;
-+      /*paint_appl_mode = GIMP_PAINT_INCREMENTAL;*/
++      paint_appl_mode = GIMP_PAINT_INCREMENTAL; // reverted, TODO - check mixbrush
      }
    /* otherwise fill the area with the foreground color */
    else
@@ -5420,7 +5124,7 @@
  
    gimp_viewable_preview_thaw (GIMP_VIEWABLE (drawable));
  }
-@@ -528,6 +569,12 @@
+@@ -536,6 +577,12 @@
        core->saved_proj_tiles = NULL;
      }
  
@@ -5433,7 +5137,7 @@
    if (core->canvas_tiles)
      {
        tile_manager_unref (core->canvas_tiles);
-@@ -776,14 +823,18 @@
+@@ -784,14 +831,18 @@
    return core->orig_proj_buf;
  }
  
@@ -5453,7 +5157,7 @@
  {
    TileManager *alt = NULL;
    PixelRegion  srcPR;
-@@ -832,13 +883,123 @@
+@@ -840,13 +891,123 @@
        if (paint_maskPR->tiles != core->canvas_tiles)
          {
            /*  initialize any invalid canvas tiles  */
@@ -5578,7 +5282,7 @@
          }
  
        canvas_tiles_to_canvas_buf (core);
-@@ -849,7 +1010,7 @@
+@@ -857,7 +1018,7 @@
     */
    else
      {
@@ -5587,7 +5291,7 @@
      }
  
    /*  intialize canvas buf source pixel regions  */
-@@ -873,11 +1034,14 @@
+@@ -881,11 +1042,14 @@
    core->y2 = MAX (core->y2, core->canvas_buf->y + core->canvas_buf->height);
  
    /*  Update the drawable  */
@@ -5607,7 +5311,7 @@
  }
  
  /* This works similarly to gimp_paint_core_paste. However, instead of
-@@ -894,7 +1058,8 @@
+@@ -902,7 +1066,8 @@
                           GimpDrawable             *drawable,
                           gdouble                   paint_opacity,
                           gdouble                   image_opacity,
@@ -5617,7 +5321,7 @@
  {
    PixelRegion  srcPR;
  
-@@ -902,8 +1067,10 @@
+@@ -910,8 +1075,10 @@
      {
        gimp_paint_core_paste (core, paint_maskPR, drawable,
                               paint_opacity,
@@ -5629,7 +5333,7 @@
        return;
      }
  
-@@ -929,7 +1096,7 @@
+@@ -937,7 +1104,7 @@
                                                   core->canvas_buf->height);
  
            /* combine the paint mask and the canvas tiles */
@@ -5638,7 +5342,7 @@
  
            /* initialize the maskPR from the canvas tiles */
            pixel_region_init (paint_maskPR, core->canvas_tiles,
-@@ -966,11 +1133,15 @@
+@@ -974,11 +1141,15 @@
    core->y2 = MAX (core->y2, core->canvas_buf->y + core->canvas_buf->height) ;
  
    /*  Update the drawable  */
@@ -5659,7 +5363,7 @@
  }
  
  static void
-@@ -999,6 +1170,7 @@
+@@ -1007,6 +1178,7 @@
  static void
  paint_mask_to_canvas_tiles (GimpPaintCore *core,
                              PixelRegion   *paint_maskPR,
@@ -5667,7 +5371,7 @@
                              gdouble        paint_opacity)
  {
    PixelRegion srcPR;
-@@ -1012,8 +1184,13 @@
+@@ -1020,8 +1192,13 @@
                       TRUE);
  
    /*  combine the mask to the canvas tiles  */
@@ -5683,7 +5387,7 @@
  }
  
  static void
-@@ -1139,3 +1316,58 @@
+@@ -1147,3 +1324,58 @@
          }
      }
  }
@@ -6434,7 +6138,7 @@
  
 --- gimp-2.6.6/app/tools/Makefile.in	2009-03-16 05:58:04 +0900
 +++ gimp-painter--2.6.6/app/tools/Makefile.in	2009-03-17 10:42:37 +0900
-@@ -98,7 +98,9 @@
+@@ -101,7 +101,9 @@
  	gimptoolcontrol.$(OBJEXT) gimptooloptions-gui.$(OBJEXT) \
  	gimptransformoptions.$(OBJEXT) gimptransformtool.$(OBJEXT) \
  	gimptransformtoolundo.$(OBJEXT) gimpvectoroptions.$(OBJEXT) \
@@ -6445,7 +6149,7 @@
  am_libapptools_a_OBJECTS = $(am__objects_1) $(am__objects_2)
  libapptools_a_OBJECTS = $(am_libapptools_a_OBJECTS)
  DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
-@@ -620,7 +622,13 @@
+@@ -606,7 +608,13 @@
  	gimpvectoroptions.c		\
  	gimpvectoroptions.h		\
  	gimpvectortool.c		\
@@ -6460,7 +6164,7 @@
  
  libapptools_a_built_sources = tools-enums.c
  libapptools_a_SOURCES = $(libapptools_a_built_sources) $(libapptools_a_sources)
-@@ -766,6 +774,9 @@
+@@ -753,6 +761,9 @@
  @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tool_manager.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tools-enums.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tools-utils.Po@am__quote@
@@ -6632,7 +6336,7 @@
 +
 +  table = gtk_table_new (3, 3, FALSE);
 +  gtk_table_set_col_spacings (GTK_TABLE (table), 2);
-+  gtk_box_pack_start (GTK_VBOX (compensate_vbox), table, TRUE, TRUE, 0);
++  gtk_box_pack_start (GTK_BOX (compensate_vbox), table, TRUE, TRUE, 0);
 +  gtk_widget_show (table);
 +
 +  /* compensation history size slider */
@@ -6653,7 +6357,7 @@
 +  checkbox = 
 +    gimp_prop_check_button_new (config, "compensate-at-last",
 +                               _("Draw pen line to finished point:"));
-+  gtk_box_pack_start (GTK_VBOX (compensate_vbox), checkbox, FALSE, FALSE, 0);
++  gtk_box_pack_start (GTK_BOX (compensate_vbox), checkbox, FALSE, FALSE, 0);
 +  gtk_widget_show(checkbox);
 +
 +  /*  bottom hbox */
@@ -6945,9 +6649,9 @@
 +#include "tools-types.h"
 +
 +#include "paint/gimpmixbrushoptions.h"
-+
++#include "widgets/gimppropwidgets.h"
 +#include "widgets/gimphelp-ids.h"
-+
++#include "widgets/gimpviewablebox.h"
 +#include "gimpmixbrushtool.h"
 +#include "gimppaintoptions-gui.h"
 +#include "gimptoolcontrol.h"
@@ -7608,27 +7312,6 @@
 + 
 +   return frame;
 +}
---- gimp-2.6.6/app/widgets/gimpdeviceinfo.c	2008-11-21 07:43:04 +0900
-+++ gimp-painter--2.6.6/app/widgets/gimpdeviceinfo.c	2009-06-16 01:28:34 +0900
-@@ -428,6 +428,18 @@
-   device_info->num_keys   = device->num_keys;
-   device_info->keys       = NULL;
- 
-+#ifdef G_OS_WIN32
-+  //g_printerr ("- - - ->> device name : %s\n", device->name);
-+  {
-+    gchar *name = g_ascii_strdown (device->name, -1);
-+
-+    if (g_strrstr (name, "puck"))
-+      gdk_device_set_source (device, GDK_SOURCE_CURSOR);
-+
-+    g_free (name);
-+  }
-+#endif
-+
-   return device_info;
- }
- 
 --- gimp-2.6.6/app/widgets/gimptooloptionseditor.c	2008-11-21 07:43:04 +0900
 +++ gimp-painter--2.6.6/app/widgets/gimptooloptionseditor.c	2009-03-17 10:42:37 +0900
 @@ -83,6 +83,9 @@
